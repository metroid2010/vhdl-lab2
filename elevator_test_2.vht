-- Vhdl Self-Checking Test Bench (with test vectors) for design :       elevator
-- Auto generated by Quartus II
-- Modified and checked by
--		Roberto Uceda Gomez, NIA 100346538
-- Digital electronics lab, session 2

LIBRARY ieee;                                               
USE ieee.std_logic_1164.all;       
LIBRARY STD;                                                            
USE STD.textio.ALL;   -- to enable writing to console                         

ENTITY elevator_vhd_vec_tst IS
END elevator_vhd_vec_tst;
ARCHITECTURE elevator_arch OF elevator_vhd_vec_tst IS
-- constants                                                 
-- signals                 
-- inputs                                  
SIGNAL B : STD_LOGIC_VECTOR(3 DOWNTO 0);
SIGNAL RESET : STD_LOGIC;
SIGNAL S : STD_LOGIC;
SIGNAL CLK : STD_LOGIC;
-- outputs
SIGNAL BUSY : STD_LOGIC;
SIGNAL FLOOR : STD_LOGIC_VECTOR(1 DOWNTO 0);
SIGNAL MOTOR : STD_LOGIC;
SIGNAL OPENING : STD_LOGIC;
SIGNAL SENSE : STD_LOGIC;
SIGNAL TARGET : STD_LOGIC_VECTOR(1 DOWNTO 0);

--clock period
constant clk_period : time := 1ms;
COMPONENT elevator
	PORT (
	B : IN STD_LOGIC_VECTOR(3 DOWNTO 0);
	BUSY : OUT STD_LOGIC;
	CLK : IN STD_LOGIC;
	FLOOR : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
	MOTOR : OUT STD_LOGIC;
	OPENING : OUT STD_LOGIC;
	RESET : IN STD_LOGIC;
	S : IN STD_LOGIC;
	SENSE : OUT STD_LOGIC;
	TARGET : OUT STD_LOGIC_VECTOR(1 DOWNTO 0)
	);
END COMPONENT;
BEGIN
	uut : elevator
	PORT MAP (
-- list connections between master ports and signals
	B => B,
	BUSY => BUSY,
	CLK => CLK,
	FLOOR => FLOOR,
	MOTOR => MOTOR,
	OPENING => OPENING,
	RESET => RESET,
	S => S,
	SENSE => SENSE,
	TARGET => TARGET
	);
END elevator_arch;

-- clock process def
process
begin
	CLK <= '0';
	wait for clk_period/2;
	CLK <= '1';
	wait for clk_period/2;
end process;

-- stimulus
stim_proc: process
begin
	-- reset
	RESET <= '1';
	wait for 10ms;
	RESET <= '0';
	wait for 10ms;
	
	-- button press - third floor
	B(3) <= '1';
	wait for 2ms;
	B(3) <= '0';
	wait for 20ms;
	
	-- floor pass, three floors
	S <= '1';
	wait for 2ms;
	S <= '0';
	wait for 20ms;
	S <= '1';
	wait for 2ms;
	S <= '0';
	wait for 20ms;
	S <= '1';
	wait for 2ms;
	S <= '0';
	wait for 200ms;
	
	-- button press - first floor
	B(0) <= '1';
	wait for 2ms;
	B(0) <= '0';
	wait for 20ms;
	
	-- floor pass, three floors
	S <= '1';
	wait for 2ms;
	S <= '0';
	wait for 20ms;
	S <= '1';
	wait for 2ms;
	S <= '0';
	wait for 20ms;
	S <= '1';
	wait for 2ms;
	S <= '0';
	wait for 200ms;

end process;
end elevator_arch;
	